name: Test, Build and Push Docker image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Cache ðŸ“¦ node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install deps
        run: npm ci

      - name: Run tests
        run: npm test
        
  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/front:latest
          build-args: |
            VITE_API_URL=${{ secrets.API_URL }}
            VITE_ENCRYPTION_KEY=${{ secrets.API_KEY }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/front:cache
          cache-to:   type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/front:cache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Add SSH key
        run: |
          install -m 700 -d ~/.ssh
          echo "${{ secrets.GCLOUD_SSH_KEY }}" > ~/.ssh/gcloud_key
          chmod 600 ~/.ssh/gcloud_key

      - name: Pull & run container na VM
        env:
          HOST: ${{ secrets.GCLOUD_HOST }}
          USER: ${{ secrets.GCLOUD_USER }}
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/front:latest
          DH_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DH_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/gcloud_key $USER@$HOST << EOF
            echo "\$DOCKERHUB_TOKEN" | sudo docker login -u "\$DOCKERHUB_USERNAME" --password-stdin
            sudo docker stop front || true
            sudo docker rm   front || true
            sudo docker image prune -f
            sudo docker pull "\$IMAGE"
            # Nginx escuta na porta 80 interna â†’ mapeie p/ 80 externa (ou 8080 se preferir)
            sudo docker run -d --name front -p 80:80 "\$IMAGE"
          EOF
