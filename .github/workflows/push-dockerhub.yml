name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'

jobs:
  test:
      runs-on: ubuntu-22.04
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
            cache: 'npm'
  
        - name: Cache Node.js modules
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: node-cache-${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
            restore-keys: |
              node-cache-${{ runner.os }}-npm-
  
        - name: Install dependencies
          run: npm ci
  
        - name: Run user tests
          run: npm test

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ github.ref }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{secrets.GCLOUD_PROJECT}}/front/front:${GITHUB_SHA} .
          docker push us-central1-docker.pkg.dev/${{secrets.GCLOUD_PROJECT}}/front/front:${GITHUB_SHA}

      - name: Deploy to Kubernetes
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            gcloud container clusters get-credentials production --zone us-central1-a --project ${{ secrets.GCLOUD_PROJECT }}
          
            kubectl config use-context gke_${{ secrets.GCLOUD_PROJECT }}_us-central1-a_my-cluster
            kubectl set image deployment/front front=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA}
          elif [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            gcloud container clusters get-credentials stage --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}  
            
            kubectl config use-context gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-a_my-cluster
            kubectl set image deployment/front front=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA}
          fi
