name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'release-*'

jobs:
  test:
      if: |
          github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release-*')

      runs-on: ubuntu-22.04
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '18'
            cache: 'npm'
  
        - name: Cache Node.js modules
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: node-cache-${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
            restore-keys: |
              node-cache-${{ runner.os }}-npm-
  
        - name: Install dependencies
          run: npm ci

  
        - name: Run user tests
          run: npm test

  build_and_deploy:
    needs: [test]
    if: always()
    runs-on: ubuntu-latest
    environment: ${{ github.ref }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          credentials_json: '${{ secrets.GKE_SECRET }}'
          install_components: 'gke-gcloud-auth-plugin'

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Build Docker Image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/${{secrets.GCLOUD_PROJECT}}/front/front:${GITHUB_SHA} .
          docker push us-central1-docker.pkg.dev/${{secrets.GCLOUD_PROJECT}}/front/front:${GITHUB_SHA}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud container clusters get-credentials production --zone us-central1 --project ${{ secrets.GCLOUD_PROJECT }}
          kubectl config use-context gke_${{ secrets.GCLOUD_PROJECT }}_us-central1_production
          kubectl set image deployment/front front=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${{ github.sha }}
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        run: |
          gcloud container clusters get-credentials stage --zone us-central1 --project ${{ secrets.GCLOUD_PROJECT }}
          kubectl config use-context gke_${{ secrets.GCLOUD_PROJECT }}_us-central1_stage
          kubectl set image deployment/front front=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${{ github.sha }}
      
      - name: Release Branch
        if: startsWith(github.ref, 'refs/heads/release-')
        run: echo "A imagem da Release branch foi enviado ao Artifact Registry!"

